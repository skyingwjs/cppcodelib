#ifndef __BINARY_SEARCH_H__
#define __BINARY_SEARCH_H__
#include <iostream>
using namespace std;
class BinarySearch{
public:
	/************************************************************************
	 1.查找某个数的下标;在有序数组中查找某个数，找到返回数的下标，存在多个返回任意一个即可，
	 没有返回-1
	************************************************************************/
	int binarySearch(int* a,int n,int key);


	/************************************************************************
	2.查找第一个大于等于某个数的下标;输入数组int[] a = {1,2,2,2,4,8,10}，查找2，
	返回第一个2的下标1；查找3，返回4的下标4；查找4，返回4的下标4。如果没有大于等于key的元素，返回-1。
	************************************************************************/
	int firstGreatOrEqual(int* a,int n,int key);


	/************************************************************************
	3.查找第一个大于某个数的下标;输入数组int[] a = {1,2,2,2,4,8,10}，查找2，返回4的下标4；
	查找3，返回4的下标4；查找4，返回8的下标5。如果没有大于key的元素，返回-1。
	************************************************************************/
	int firstGreat(int* a,int n,int key);


	/************************************************************************
	4.查找数组中某个数的位置的最小下标;没有返回-1
	************************************************************************/
	int firstIndex(int* a,int n,int key);


	/************************************************************************
	5.查找数组中某个数的位置的最大下标，没有返回-1
	************************************************************************/
	int lastIndex(int* a,int n,int key);


	/************************************************************************
	6.查找数组中小于某个数的最大下标，没有返回-1
	************************************************************************/
	int firstLess(int* a,int n,int key);


	/************************************************************************
	7.查找数组中某个数出现的次数
	************************************************************************/
	int getCount(int* a,int n,int key);
	int firstGreatOrEqual2(int* a,int n,int key);
	int firstGreat2(int* a,int n,int key);
};

#endif